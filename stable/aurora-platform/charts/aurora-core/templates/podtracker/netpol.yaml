{{ if .Values.components.podtracker.enabled -}}

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: "{{ .Values.global.cluster }}-podtracker-netpol"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.global.project }}
  source:
    chart: {{ .Values.global.raw.helm.chart }}
    repoURL: {{ default .Values.global.helm.repository .Values.global.raw.helm.repository }}
    targetRevision: {{ .Values.global.raw.helm.targetRevision }}
    helm:
      releaseName: podtracker-netpol
      values: |
        resources:
          - apiVersion: networking.k8s.io/v1
            kind: NetworkPolicy
            metadata:
              name: allow-ingress-from-prometheus-to-podtracker
              namespace: podtracker-system
            spec:
              ingress:
              - from:
                - namespaceSelector:
                    matchLabels:
                      namespace.ssc-spc.gc.ca/purpose: system
                      kubernetes.io/metadata.name: prometheus-system
                  podSelector:
                    matchLabels:
                      app.kubernetes.io/name: prometheus
                      app.kubernetes.io/instance: kube-prometheus-stack-prometheus
              podSelector:
                matchLabels:
                  app.kubernetes.io/name: podtracker
                  app.kubernetes.io/instance: podtracker
              policyTypes:
              - Ingress
          - apiVersion: networking.k8s.io/v1
            kind: NetworkPolicy
            metadata:
              name: allow-ingress-from-apiserver-to-podtracker
              namespace: podtracker-system
            spec:
              ingress:
              - from:
                - ipBlock:
                    cidr: {{ required "global.apiServerCidr is required" .Values.global.apiServerCidr | quote }}
                - namespaceSelector:
                    matchLabels:
                      kubernetes.io/metadata.name: kube-system
                  podSelector:
                    matchLabels:
                      app: konnectivity-agent
              podSelector: {}
              policyTypes:
              - Ingress
  destination:
    name: {{ .Values.global.cluster }}
    namespace: platform-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: true

{{- end }}
